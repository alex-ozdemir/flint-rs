/* automatically generated by rust-bindgen 0.70.1 */

use crate::deps::*;
use crate::flint::*;


extern "C" {
    #[link_name = "_perm_init__extern"]
    pub fn _perm_init(n: mp_limb_signed_t) -> *mut mp_limb_signed_t;
    #[link_name = "_perm_clear__extern"]
    pub fn _perm_clear(vec: *mut mp_limb_signed_t);
    #[link_name = "_perm_equal__extern"]
    pub fn _perm_equal(
        vec1: *const mp_limb_signed_t,
        vec2: *const mp_limb_signed_t,
        n: mp_limb_signed_t,
    ) -> mp_limb_signed_t;
    #[link_name = "_perm_set__extern"]
    pub fn _perm_set(res: *mut mp_limb_signed_t, vec: *const mp_limb_signed_t, n: mp_limb_signed_t);
    #[link_name = "_perm_one__extern"]
    pub fn _perm_one(vec: *mut mp_limb_signed_t, n: mp_limb_signed_t);
    #[link_name = "_perm_inv__extern"]
    pub fn _perm_inv(res: *mut mp_limb_signed_t, vec: *const mp_limb_signed_t, n: mp_limb_signed_t);
    #[link_name = "_perm_compose__extern"]
    pub fn _perm_compose(
        res: *mut mp_limb_signed_t,
        vec1: *const mp_limb_signed_t,
        vec2: *const mp_limb_signed_t,
        n: mp_limb_signed_t,
    );
    pub fn _perm_randtest(
        vec: *mut mp_limb_signed_t,
        n: mp_limb_signed_t,
        state: *mut flint_rand_s,
    ) -> libc::c_int;
    pub fn _perm_parity(vec: *const mp_limb_signed_t, n: mp_limb_signed_t) -> libc::c_int;
}
