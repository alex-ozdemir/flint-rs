/* automatically generated by rust-bindgen 0.70.1 */

use libc::*;
use crate::deps::*;
use crate::bindgen::*;
use crate::acb::*;
use crate::acb_calc::*;
use crate::acb_dft::*;
use crate::acb_dirichlet::*;
use crate::acb_elliptic::*;
use crate::acb_hypgeom::*;
use crate::acb_mat::*;
use crate::acb_modular::*;
use crate::acb_poly::*;
use crate::acb_theta::*;
use crate::acb_types::*;
use crate::acf::*;
use crate::acf_types::*;
use crate::aprcl::*;
use crate::arb::*;
use crate::arb_calc::*;
use crate::arb_fmpz_poly::*;
use crate::arb_fpwrap::*;
use crate::arb_hypgeom::*;
use crate::arb_mat::*;
use crate::arb_poly::*;
use crate::arb_types::*;
use crate::arf::*;
use crate::arf_types::*;
use crate::arith::*;
use crate::bernoulli::*;
use crate::bool_mat::*;
use crate::ca::*;
use crate::ca_ext::*;
use crate::ca_field::*;
use crate::ca_mat::*;
use crate::ca_poly::*;
use crate::ca_vec::*;
use crate::calcium::*;
use crate::d_mat::*;
use crate::d_vec::*;
use crate::dirichlet::*;
use crate::dlog::*;
use crate::double_extras::*;
use crate::double_interval::*;
use crate::fexpr::*;
use crate::fexpr_builtin::*;
use crate::fft::*;
use crate::fft_tuning::*;
use crate::flint_config::*;
use crate::flint::*;
use crate::fmpq::*;
use crate::fmpq_mat::*;
use crate::fmpq_mpoly::*;
use crate::fmpq_mpoly_factor::*;
use crate::fmpq_poly::*;
use crate::fmpq_types::*;
use crate::fmpq_vec::*;
use crate::fmpz::*;
use crate::fmpz_extras::*;
use crate::fmpz_factor::*;
use crate::fmpz_lll::*;
use crate::fmpz_mat::*;
use crate::fmpz_mod::*;
use crate::fmpz_mod_mat::*;
use crate::fmpz_mod_mpoly::*;
use crate::fmpz_mod_mpoly_factor::*;
use crate::fmpz_mod_poly::*;
use crate::fmpz_mod_poly_factor::*;
use crate::fmpz_mod_types::*;
use crate::fmpz_mod_vec::*;
use crate::fmpz_mpoly::*;
use crate::fmpz_mpoly_factor::*;
use crate::fmpz_mpoly_q::*;
use crate::fmpz_poly::*;
use crate::fmpz_poly_factor::*;
use crate::fmpz_poly_mat::*;
use crate::fmpz_poly_q::*;
use crate::fmpz_types::*;
use crate::fmpz_vec::*;
use crate::fmpzi::*;
use crate::fq::*;
use crate::fq_default::*;
use crate::fq_default_mat::*;
use crate::fq_default_poly::*;
use crate::fq_default_poly_factor::*;
use crate::fq_embed::*;
use crate::fq_embed_templates::*;
use crate::fq_mat::*;
use crate::fq_mat_templates::*;
use crate::fq_nmod::*;
use crate::fq_nmod_embed::*;
use crate::fq_nmod_mat::*;
use crate::fq_nmod_mpoly::*;
use crate::fq_nmod_mpoly_factor::*;
use crate::fq_nmod_poly::*;
use crate::fq_nmod_poly_factor::*;
use crate::fq_nmod_types::*;
use crate::fq_nmod_vec::*;
use crate::fq_poly::*;
use crate::fq_poly_factor::*;
use crate::fq_poly_factor_templates::*;
use crate::fq_poly_templates::*;
use crate::fq_templates::*;
use crate::fq_types::*;
use crate::fq_vec::*;
use crate::fq_vec_templates::*;
use crate::fq_zech::*;
use crate::fq_zech_embed::*;
use crate::fq_zech_mat::*;
use crate::fq_zech_mpoly::*;
use crate::fq_zech_mpoly_factor::*;
use crate::fq_zech_poly::*;
use crate::fq_zech_poly_factor::*;
use crate::fq_zech_types::*;
use crate::fq_zech_vec::*;
use crate::gmpcompat::*;
use crate::gr::*;
use crate::gr_generic::*;
use crate::gr_mat::*;
use crate::gr_mpoly::*;
use crate::gr_poly::*;
use crate::gr_special::*;
use crate::hypgeom::*;
use crate::limb_types::*;
use crate::long_extras::*;
use crate::longlong::*;
use crate::mag::*;
use crate::mpf_impl::*;
use crate::mpfr_mat::*;
use crate::mpfr_vec::*;
use crate::mpoly::*;
use crate::mpoly_types::*;
use crate::n_poly::*;
use crate::n_poly_types::*;
use crate::nf::*;
use crate::nf_elem::*;
use crate::nmod::*;
use crate::nmod_mat::*;
use crate::nmod_mpoly::*;
use crate::nmod_mpoly_factor::*;
use crate::nmod_poly::*;
use crate::nmod_poly_factor::*;
use crate::nmod_poly_mat::*;
use crate::nmod_types::*;
use crate::nmod_vec::*;
use crate::padic::*;
use crate::padic_mat::*;
use crate::padic_poly::*;
use crate::padic_types::*;
use crate::partitions::*;
use crate::perm::*;
use crate::qadic::*;
use crate::qfb::*;
use crate::qqbar::*;
use crate::qsieve::*;
use crate::templates::*;
use crate::thread_pool::*;
use crate::thread_support::*;
use crate::ulong_extras::*;


pub type gr_method_vec_normalise_op = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut mp_limb_signed_t,
        arg2: gr_srcptr,
        arg3: mp_limb_signed_t,
        arg4: gr_ctx_ptr,
    ) -> libc::c_int,
>;
pub type gr_method_vec_normalise_weak_op = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: gr_srcptr,
        arg2: mp_limb_signed_t,
        arg3: gr_ctx_ptr,
    ) -> mp_limb_signed_t,
>;
pub type gr_method_vec_reduce_op = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: gr_ptr,
        arg2: gr_srcptr,
        arg3: mp_limb_signed_t,
        arg4: gr_ctx_ptr,
    ) -> libc::c_int,
>;
pub type gr_method_vec_dot_op = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: gr_ptr,
        arg2: gr_srcptr,
        arg3: libc::c_int,
        arg4: gr_srcptr,
        arg5: gr_srcptr,
        arg6: mp_limb_signed_t,
        arg7: gr_ctx_ptr,
    ) -> libc::c_int,
>;
pub type gr_method_vec_dot_si_op = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: gr_ptr,
        arg2: gr_srcptr,
        arg3: libc::c_int,
        arg4: gr_srcptr,
        arg5: *const mp_limb_signed_t,
        arg6: mp_limb_signed_t,
        arg7: gr_ctx_ptr,
    ) -> libc::c_int,
>;
pub type gr_method_vec_dot_ui_op = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: gr_ptr,
        arg2: gr_srcptr,
        arg3: libc::c_int,
        arg4: gr_srcptr,
        arg5: *const mp_limb_t,
        arg6: mp_limb_signed_t,
        arg7: gr_ctx_ptr,
    ) -> libc::c_int,
>;
pub type gr_method_vec_dot_fmpz_op = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: gr_ptr,
        arg2: gr_srcptr,
        arg3: libc::c_int,
        arg4: gr_srcptr,
        arg5: *const fmpz,
        arg6: mp_limb_signed_t,
        arg7: gr_ctx_ptr,
    ) -> libc::c_int,
>;
extern "C" {
    pub fn gr_vec_init(vec: *mut gr_vec_struct, len: mp_limb_signed_t, ctx: *mut gr_ctx_struct);
    pub fn gr_vec_clear(vec: *mut gr_vec_struct, ctx: *mut gr_ctx_struct);
    #[link_name = "gr_vec_entry_ptr__extern"]
    pub fn gr_vec_entry_ptr(
        vec: *mut gr_vec_struct,
        i: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> gr_ptr;
    #[link_name = "gr_vec_entry_srcptr__extern"]
    pub fn gr_vec_entry_srcptr(
        vec: *const gr_vec_struct,
        i: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> gr_srcptr;
    #[link_name = "gr_vec_length__extern"]
    pub fn gr_vec_length(vec: *const gr_vec_struct, ctx: *mut gr_ctx_struct) -> mp_limb_signed_t;
    pub fn gr_vec_fit_length(
        vec: *mut gr_vec_struct,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    );
    pub fn gr_vec_set_length(
        vec: *mut gr_vec_struct,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    );
    pub fn gr_vec_set(
        res: *mut gr_vec_struct,
        src: *const gr_vec_struct,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_vec_append(
        vec: *mut gr_vec_struct,
        f: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_write(
        out: *mut gr_stream_struct,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_vec_write(
        out: *mut gr_stream_struct,
        vec: *const gr_vec_struct,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_print(
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_vec_print(vec: *const gr_vec_struct, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "_gr_vec_zero__extern"]
    pub fn _gr_vec_zero(vec: gr_ptr, len: mp_limb_signed_t, ctx: *mut gr_ctx_struct)
        -> libc::c_int;
    #[link_name = "_gr_vec_set__extern"]
    pub fn _gr_vec_set(
        res: gr_ptr,
        src: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_neg__extern"]
    pub fn _gr_vec_neg(
        res: gr_ptr,
        src: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_normalise__extern"]
    pub fn _gr_vec_normalise(
        res: *mut mp_limb_signed_t,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_normalise_weak__extern"]
    pub fn _gr_vec_normalise_weak(
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> mp_limb_signed_t;
    #[link_name = "_gr_vec_add__extern"]
    pub fn _gr_vec_add(
        res: gr_ptr,
        src1: gr_srcptr,
        src2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_sub__extern"]
    pub fn _gr_vec_sub(
        res: gr_ptr,
        src1: gr_srcptr,
        src2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_mul__extern"]
    pub fn _gr_vec_mul(
        res: gr_ptr,
        src1: gr_srcptr,
        src2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_div__extern"]
    pub fn _gr_vec_div(
        res: gr_ptr,
        src1: gr_srcptr,
        src2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_divexact__extern"]
    pub fn _gr_vec_divexact(
        res: gr_ptr,
        src1: gr_srcptr,
        src2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_pow__extern"]
    pub fn _gr_vec_pow(
        res: gr_ptr,
        src1: gr_srcptr,
        src2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_add_scalar__extern"]
    pub fn _gr_vec_add_scalar(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_sub_scalar__extern"]
    pub fn _gr_vec_sub_scalar(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_mul_scalar__extern"]
    pub fn _gr_vec_mul_scalar(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_div_scalar__extern"]
    pub fn _gr_vec_div_scalar(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_divexact_scalar__extern"]
    pub fn _gr_vec_divexact_scalar(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_pow_scalar__extern"]
    pub fn _gr_vec_pow_scalar(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_add_scalar_si__extern"]
    pub fn _gr_vec_add_scalar_si(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_sub_scalar_si__extern"]
    pub fn _gr_vec_sub_scalar_si(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_mul_scalar_si__extern"]
    pub fn _gr_vec_mul_scalar_si(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_div_scalar_si__extern"]
    pub fn _gr_vec_div_scalar_si(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_divexact_scalar_si__extern"]
    pub fn _gr_vec_divexact_scalar_si(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_pow_scalar_si__extern"]
    pub fn _gr_vec_pow_scalar_si(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_add_scalar_ui__extern"]
    pub fn _gr_vec_add_scalar_ui(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_sub_scalar_ui__extern"]
    pub fn _gr_vec_sub_scalar_ui(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_mul_scalar_ui__extern"]
    pub fn _gr_vec_mul_scalar_ui(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_div_scalar_ui__extern"]
    pub fn _gr_vec_div_scalar_ui(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_divexact_scalar_ui__extern"]
    pub fn _gr_vec_divexact_scalar_ui(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_pow_scalar_ui__extern"]
    pub fn _gr_vec_pow_scalar_ui(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_add_scalar_fmpz__extern"]
    pub fn _gr_vec_add_scalar_fmpz(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_sub_scalar_fmpz__extern"]
    pub fn _gr_vec_sub_scalar_fmpz(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_mul_scalar_fmpz__extern"]
    pub fn _gr_vec_mul_scalar_fmpz(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_div_scalar_fmpz__extern"]
    pub fn _gr_vec_div_scalar_fmpz(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_divexact_scalar_fmpz__extern"]
    pub fn _gr_vec_divexact_scalar_fmpz(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_pow_scalar_fmpz__extern"]
    pub fn _gr_vec_pow_scalar_fmpz(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_add_scalar_fmpq__extern"]
    pub fn _gr_vec_add_scalar_fmpq(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpq,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_sub_scalar_fmpq__extern"]
    pub fn _gr_vec_sub_scalar_fmpq(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpq,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_mul_scalar_fmpq__extern"]
    pub fn _gr_vec_mul_scalar_fmpq(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpq,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_div_scalar_fmpq__extern"]
    pub fn _gr_vec_div_scalar_fmpq(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpq,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_divexact_scalar_fmpq__extern"]
    pub fn _gr_vec_divexact_scalar_fmpq(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpq,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_pow_scalar_fmpq__extern"]
    pub fn _gr_vec_pow_scalar_fmpq(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: *const fmpq,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_add_vec__extern"]
    pub fn _gr_scalar_add_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_sub_vec__extern"]
    pub fn _gr_scalar_sub_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_mul_vec__extern"]
    pub fn _gr_scalar_mul_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_div_vec__extern"]
    pub fn _gr_scalar_div_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_divexact_vec__extern"]
    pub fn _gr_scalar_divexact_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_pow_vec__extern"]
    pub fn _gr_scalar_pow_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_add_other__extern"]
    pub fn _gr_vec_add_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        vec3: gr_srcptr,
        ctx3: *mut gr_ctx_struct,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_sub_other__extern"]
    pub fn _gr_vec_sub_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        vec3: gr_srcptr,
        ctx3: *mut gr_ctx_struct,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_mul_other__extern"]
    pub fn _gr_vec_mul_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        vec3: gr_srcptr,
        ctx3: *mut gr_ctx_struct,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_div_other__extern"]
    pub fn _gr_vec_div_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        vec3: gr_srcptr,
        ctx3: *mut gr_ctx_struct,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_divexact_other__extern"]
    pub fn _gr_vec_divexact_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        vec3: gr_srcptr,
        ctx3: *mut gr_ctx_struct,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_pow_other__extern"]
    pub fn _gr_vec_pow_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        vec3: gr_srcptr,
        ctx3: *mut gr_ctx_struct,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_other_add_vec__extern"]
    pub fn _gr_other_add_vec(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        ctx2: *mut gr_ctx_struct,
        vec3: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_other_sub_vec__extern"]
    pub fn _gr_other_sub_vec(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        ctx2: *mut gr_ctx_struct,
        vec3: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_other_mul_vec__extern"]
    pub fn _gr_other_mul_vec(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        ctx2: *mut gr_ctx_struct,
        vec3: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_other_div_vec__extern"]
    pub fn _gr_other_div_vec(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        ctx2: *mut gr_ctx_struct,
        vec3: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_other_divexact_vec__extern"]
    pub fn _gr_other_divexact_vec(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        ctx2: *mut gr_ctx_struct,
        vec3: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_other_pow_vec__extern"]
    pub fn _gr_other_pow_vec(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        ctx2: *mut gr_ctx_struct,
        vec3: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_add_scalar_other__extern"]
    pub fn _gr_vec_add_scalar_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_sub_scalar_other__extern"]
    pub fn _gr_vec_sub_scalar_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_mul_scalar_other__extern"]
    pub fn _gr_vec_mul_scalar_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_div_scalar_other__extern"]
    pub fn _gr_vec_div_scalar_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_divexact_scalar_other__extern"]
    pub fn _gr_vec_divexact_scalar_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_pow_scalar_other__extern"]
    pub fn _gr_vec_pow_scalar_other(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_other_add_vec__extern"]
    pub fn _gr_scalar_other_add_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_other_sub_vec__extern"]
    pub fn _gr_scalar_other_sub_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_other_mul_vec__extern"]
    pub fn _gr_scalar_other_mul_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_other_div_vec__extern"]
    pub fn _gr_scalar_other_div_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_other_divexact_vec__extern"]
    pub fn _gr_scalar_other_divexact_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_scalar_other_pow_vec__extern"]
    pub fn _gr_scalar_other_pow_vec(
        vec1: gr_ptr,
        c: gr_srcptr,
        cctx: *mut gr_ctx_struct,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_mul_scalar_2exp_si__extern"]
    pub fn _gr_vec_mul_scalar_2exp_si(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_addmul_scalar__extern"]
    pub fn _gr_vec_addmul_scalar(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_submul_scalar__extern"]
    pub fn _gr_vec_submul_scalar(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_addmul_scalar_si__extern"]
    pub fn _gr_vec_addmul_scalar_si(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_submul_scalar_si__extern"]
    pub fn _gr_vec_submul_scalar_si(
        vec1: gr_ptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_equal__extern"]
    pub fn _gr_vec_equal(
        vec1: gr_srcptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> truth_t;
    #[link_name = "_gr_vec_is_zero__extern"]
    pub fn _gr_vec_is_zero(
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> truth_t;
    #[link_name = "_gr_vec_sum__extern"]
    pub fn _gr_vec_sum(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_product__extern"]
    pub fn _gr_vec_product(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_dot__extern"]
    pub fn _gr_vec_dot(
        res: gr_ptr,
        initial: gr_srcptr,
        subtract: libc::c_int,
        vec1: gr_srcptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_dot_rev__extern"]
    pub fn _gr_vec_dot_rev(
        res: gr_ptr,
        initial: gr_srcptr,
        subtract: libc::c_int,
        vec1: gr_srcptr,
        vec2: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_dot_si__extern"]
    pub fn _gr_vec_dot_si(
        res: gr_ptr,
        initial: gr_srcptr,
        subtract: libc::c_int,
        vec1: gr_srcptr,
        vec2: *const mp_limb_signed_t,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_dot_ui__extern"]
    pub fn _gr_vec_dot_ui(
        res: gr_ptr,
        initial: gr_srcptr,
        subtract: libc::c_int,
        vec1: gr_srcptr,
        vec2: *const mp_limb_t,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_dot_fmpz__extern"]
    pub fn _gr_vec_dot_fmpz(
        res: gr_ptr,
        initial: gr_srcptr,
        subtract: libc::c_int,
        vec1: gr_srcptr,
        vec2: *const fmpz,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_reciprocals__extern"]
    pub fn _gr_vec_reciprocals(
        res: gr_ptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "_gr_vec_set_powers__extern"]
    pub fn _gr_vec_set_powers(
        res: gr_ptr,
        x: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_randtest(
        res: gr_ptr,
        state: *mut flint_rand_s,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_sum_bsplit_parallel(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        basecase_cutoff: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_sum_bsplit(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        basecase_cutoff: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_sum_parallel(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_sum_serial(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_sum_generic(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_product_bsplit_parallel(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        basecase_cutoff: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_product_bsplit(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        basecase_cutoff: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_product_parallel(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_product_serial(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_product_generic(
        res: gr_ptr,
        vec: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn _gr_vec_step(
        vec: gr_ptr,
        start: gr_srcptr,
        step: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
}
