/* automatically generated by rust-bindgen 0.70.1 */

#![allow(non_camel_case_types)]
use crate::deps::*;
use libc::{c_char, c_int, c_uint, c_void, size_t, FILE};


#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct di_t {
    pub a: f64,
    pub b: f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of di_t"][::std::mem::size_of::<di_t>() - 16usize];
    ["Alignment of di_t"][::std::mem::align_of::<di_t>() - 8usize];
    ["Offset of field: di_t::a"][::std::mem::offset_of!(di_t, a) - 0usize];
    ["Offset of field: di_t::b"][::std::mem::offset_of!(di_t, b) - 8usize];
};
extern "C" {
    pub fn di_fast_mul(x: di_t, y: di_t) -> di_t;
    pub fn di_fast_sqr(x: di_t) -> di_t;
    pub fn di_fast_div(x: di_t, y: di_t) -> di_t;
    pub fn di_fast_log_nonnegative(x: di_t) -> di_t;
    pub fn arb_get_di(x: *const arb_struct) -> di_t;
    pub fn arb_set_di(res: *mut arb_struct, x: di_t, prec: mp_limb_signed_t);
}
