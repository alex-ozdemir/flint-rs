/* automatically generated by rust-bindgen 0.70.1 */

use crate::deps::*;
use crate::flint::*;
use crate::fmpz_types::*;


#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fmpq_mat_struct {
    pub entries: *mut fmpq,
    pub r: mp_limb_signed_t,
    pub c: mp_limb_signed_t,
    pub rows: *mut *mut fmpq,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fmpq_mat_struct"][::std::mem::size_of::<fmpq_mat_struct>() - 32usize];
    ["Alignment of fmpq_mat_struct"][::std::mem::align_of::<fmpq_mat_struct>() - 8usize];
    ["Offset of field: fmpq_mat_struct::entries"]
        [::std::mem::offset_of!(fmpq_mat_struct, entries) - 0usize];
    ["Offset of field: fmpq_mat_struct::r"][::std::mem::offset_of!(fmpq_mat_struct, r) - 8usize];
    ["Offset of field: fmpq_mat_struct::c"][::std::mem::offset_of!(fmpq_mat_struct, c) - 16usize];
    ["Offset of field: fmpq_mat_struct::rows"]
        [::std::mem::offset_of!(fmpq_mat_struct, rows) - 24usize];
};
impl Default for fmpq_mat_struct {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type fmpq_mat_t = [fmpq_mat_struct; 1usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fmpq_poly_struct {
    pub coeffs: *mut fmpz,
    pub alloc: mp_limb_signed_t,
    pub length: mp_limb_signed_t,
    pub den: fmpz_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fmpq_poly_struct"][::std::mem::size_of::<fmpq_poly_struct>() - 32usize];
    ["Alignment of fmpq_poly_struct"][::std::mem::align_of::<fmpq_poly_struct>() - 8usize];
    ["Offset of field: fmpq_poly_struct::coeffs"]
        [::std::mem::offset_of!(fmpq_poly_struct, coeffs) - 0usize];
    ["Offset of field: fmpq_poly_struct::alloc"]
        [::std::mem::offset_of!(fmpq_poly_struct, alloc) - 8usize];
    ["Offset of field: fmpq_poly_struct::length"]
        [::std::mem::offset_of!(fmpq_poly_struct, length) - 16usize];
    ["Offset of field: fmpq_poly_struct::den"]
        [::std::mem::offset_of!(fmpq_poly_struct, den) - 24usize];
};
impl Default for fmpq_poly_struct {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type fmpq_poly_t = [fmpq_poly_struct; 1usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fmpq_mpoly_struct {
    pub content: fmpq_t,
    pub zpoly: fmpz_mpoly_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fmpq_mpoly_struct"][::std::mem::size_of::<fmpq_mpoly_struct>() - 56usize];
    ["Alignment of fmpq_mpoly_struct"][::std::mem::align_of::<fmpq_mpoly_struct>() - 8usize];
    ["Offset of field: fmpq_mpoly_struct::content"]
        [::std::mem::offset_of!(fmpq_mpoly_struct, content) - 0usize];
    ["Offset of field: fmpq_mpoly_struct::zpoly"]
        [::std::mem::offset_of!(fmpq_mpoly_struct, zpoly) - 16usize];
};
impl Default for fmpq_mpoly_struct {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type fmpq_mpoly_t = [fmpq_mpoly_struct; 1usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fmpq_mpoly_factor_struct {
    pub constant: fmpq_t,
    pub poly: *mut fmpq_mpoly_struct,
    pub exp: *mut fmpz,
    pub num: mp_limb_signed_t,
    pub alloc: mp_limb_signed_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fmpq_mpoly_factor_struct"]
        [::std::mem::size_of::<fmpq_mpoly_factor_struct>() - 48usize];
    ["Alignment of fmpq_mpoly_factor_struct"]
        [::std::mem::align_of::<fmpq_mpoly_factor_struct>() - 8usize];
    ["Offset of field: fmpq_mpoly_factor_struct::constant"]
        [::std::mem::offset_of!(fmpq_mpoly_factor_struct, constant) - 0usize];
    ["Offset of field: fmpq_mpoly_factor_struct::poly"]
        [::std::mem::offset_of!(fmpq_mpoly_factor_struct, poly) - 16usize];
    ["Offset of field: fmpq_mpoly_factor_struct::exp"]
        [::std::mem::offset_of!(fmpq_mpoly_factor_struct, exp) - 24usize];
    ["Offset of field: fmpq_mpoly_factor_struct::num"]
        [::std::mem::offset_of!(fmpq_mpoly_factor_struct, num) - 32usize];
    ["Offset of field: fmpq_mpoly_factor_struct::alloc"]
        [::std::mem::offset_of!(fmpq_mpoly_factor_struct, alloc) - 40usize];
};
impl Default for fmpq_mpoly_factor_struct {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type fmpq_mpoly_factor_t = [fmpq_mpoly_factor_struct; 1usize];
