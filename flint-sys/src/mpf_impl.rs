/* automatically generated by rust-bindgen 0.70.1 */

#![allow(non_camel_case_types)]
use crate::deps::*;
use crate::flint::*;
use libc::{c_char, c_int, c_uint, c_void, size_t, FILE};


pub type mpf = __mpf_struct;
#[repr(C)]
pub struct mpf_mat_struct {
    pub entries: *mut mpf,
    pub r: mp_limb_signed_t,
    pub c: mp_limb_signed_t,
    pub prec: mp_limb_t,
    pub rows: *mut *mut mpf,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of mpf_mat_struct"][::std::mem::size_of::<mpf_mat_struct>() - 40usize];
    ["Alignment of mpf_mat_struct"][::std::mem::align_of::<mpf_mat_struct>() - 8usize];
    ["Offset of field: mpf_mat_struct::entries"]
        [::std::mem::offset_of!(mpf_mat_struct, entries) - 0usize];
    ["Offset of field: mpf_mat_struct::r"][::std::mem::offset_of!(mpf_mat_struct, r) - 8usize];
    ["Offset of field: mpf_mat_struct::c"][::std::mem::offset_of!(mpf_mat_struct, c) - 16usize];
    ["Offset of field: mpf_mat_struct::prec"]
        [::std::mem::offset_of!(mpf_mat_struct, prec) - 24usize];
    ["Offset of field: mpf_mat_struct::rows"]
        [::std::mem::offset_of!(mpf_mat_struct, rows) - 32usize];
};
impl Default for mpf_mat_struct {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type mpf_mat_t = [mpf_mat_struct; 1usize];
extern "C" {
    pub fn _mpf_vec_init(len: mp_limb_signed_t, prec: mp_limb_t) -> *mut mpf;
    pub fn _mpf_vec_clear(vec: *mut mpf, len: mp_limb_signed_t);
    pub fn _mpf_vec_set_fmpz_vec(appv: *mut mpf, vec: *const fmpz, len: mp_limb_signed_t);
    pub fn _mpf_vec_dot2(
        res: *mut __mpf_struct,
        vec1: *const mpf,
        vec2: *const mpf,
        len2: mp_limb_signed_t,
        prec: mp_limb_t,
    ) -> ::std::os::raw::c_int;
    pub fn _mpf_vec_norm2(
        res: *mut __mpf_struct,
        vec: *const mpf,
        len: mp_limb_signed_t,
        prec: mp_limb_t,
    );
    pub fn _mpf_vec_norm(res: *mut __mpf_struct, vec: *const mpf, len: mp_limb_signed_t);
    pub fn mpf_mat_init(
        mat: *mut mpf_mat_struct,
        rows: mp_limb_signed_t,
        cols: mp_limb_signed_t,
        prec: mp_limb_t,
    );
    pub fn mpf_mat_clear(mat: *mut mpf_mat_struct);
}
