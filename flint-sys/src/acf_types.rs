/* automatically generated by rust-bindgen 0.70.1 */

use crate::arf_types::*;


#[repr(C)]
pub struct acf_struct {
    pub real: arf_struct,
    pub imag: arf_struct,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of acf_struct"][::std::mem::size_of::<acf_struct>() - 64usize];
    ["Alignment of acf_struct"][::std::mem::align_of::<acf_struct>() - 8usize];
    ["Offset of field: acf_struct::real"][::std::mem::offset_of!(acf_struct, real) - 0usize];
    ["Offset of field: acf_struct::imag"][::std::mem::offset_of!(acf_struct, imag) - 32usize];
};
impl Default for acf_struct {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub type acf_t = [acf_struct; 1usize];
pub type acf_ptr = *mut acf_struct;
pub type acf_srcptr = *const acf_struct;
