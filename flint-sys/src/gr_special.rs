/* automatically generated by rust-bindgen 0.70.1 */

use crate::deps::*;
use crate::flint::*;
use crate::gr::*;


pub type gr_method_pfq_op_op = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: gr_ptr,
        arg2: *const gr_vec_struct,
        arg3: *const gr_vec_struct,
        arg4: gr_srcptr,
        arg5: libc::c_int,
        arg6: gr_ctx_ptr,
    ) -> libc::c_int,
>;
extern "C" {
    #[link_name = "gr_pi__extern"]
    pub fn gr_pi(res: gr_ptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_euler__extern"]
    pub fn gr_euler(res: gr_ptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_catalan__extern"]
    pub fn gr_catalan(res: gr_ptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_khinchin__extern"]
    pub fn gr_khinchin(res: gr_ptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_glaisher__extern"]
    pub fn gr_glaisher(res: gr_ptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_exp__extern"]
    pub fn gr_exp(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_expm1__extern"]
    pub fn gr_expm1(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_exp2__extern"]
    pub fn gr_exp2(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_exp10__extern"]
    pub fn gr_exp10(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_exp_pi_i__extern"]
    pub fn gr_exp_pi_i(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_log__extern"]
    pub fn gr_log(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_log1p__extern"]
    pub fn gr_log1p(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_log_pi_i__extern"]
    pub fn gr_log_pi_i(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_log2__extern"]
    pub fn gr_log2(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_log10__extern"]
    pub fn gr_log10(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sin__extern"]
    pub fn gr_sin(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_cos__extern"]
    pub fn gr_cos(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sin_cos__extern"]
    pub fn gr_sin_cos(
        res1: gr_ptr,
        res2: gr_ptr,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_tan__extern"]
    pub fn gr_tan(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_cot__extern"]
    pub fn gr_cot(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sec__extern"]
    pub fn gr_sec(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_csc__extern"]
    pub fn gr_csc(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sin_pi__extern"]
    pub fn gr_sin_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_cos_pi__extern"]
    pub fn gr_cos_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sin_cos_pi__extern"]
    pub fn gr_sin_cos_pi(
        res1: gr_ptr,
        res2: gr_ptr,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_tan_pi__extern"]
    pub fn gr_tan_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_cot_pi__extern"]
    pub fn gr_cot_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sec_pi__extern"]
    pub fn gr_sec_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_csc_pi__extern"]
    pub fn gr_csc_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sinc__extern"]
    pub fn gr_sinc(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sinc_pi__extern"]
    pub fn gr_sinc_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sinh__extern"]
    pub fn gr_sinh(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_cosh__extern"]
    pub fn gr_cosh(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sinh_cosh__extern"]
    pub fn gr_sinh_cosh(
        res1: gr_ptr,
        res2: gr_ptr,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_tanh__extern"]
    pub fn gr_tanh(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_coth__extern"]
    pub fn gr_coth(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sech__extern"]
    pub fn gr_sech(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_csch__extern"]
    pub fn gr_csch(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_asin__extern"]
    pub fn gr_asin(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_acos__extern"]
    pub fn gr_acos(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_atan__extern"]
    pub fn gr_atan(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_atan2__extern"]
    pub fn gr_atan2(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_acot__extern"]
    pub fn gr_acot(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_asec__extern"]
    pub fn gr_asec(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_acsc__extern"]
    pub fn gr_acsc(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_asin_pi__extern"]
    pub fn gr_asin_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_acos_pi__extern"]
    pub fn gr_acos_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_atan_pi__extern"]
    pub fn gr_atan_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_acot_pi__extern"]
    pub fn gr_acot_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_asec_pi__extern"]
    pub fn gr_asec_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_acsc_pi__extern"]
    pub fn gr_acsc_pi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_asinh__extern"]
    pub fn gr_asinh(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_acosh__extern"]
    pub fn gr_acosh(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_atanh__extern"]
    pub fn gr_atanh(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_acoth__extern"]
    pub fn gr_acoth(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_asech__extern"]
    pub fn gr_asech(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_acsch__extern"]
    pub fn gr_acsch(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_lambertw__extern"]
    pub fn gr_lambertw(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_lambertw_fmpz__extern"]
    pub fn gr_lambertw_fmpz(
        res: gr_ptr,
        x: gr_srcptr,
        k: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_fac__extern"]
    pub fn gr_fac(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_fac_ui__extern"]
    pub fn gr_fac_ui(res: gr_ptr, x: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_fac_fmpz__extern"]
    pub fn gr_fac_fmpz(res: gr_ptr, x: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_fac_vec__extern"]
    pub fn gr_fac_vec(res: gr_ptr, len: mp_limb_signed_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_rfac__extern"]
    pub fn gr_rfac(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_rfac_ui__extern"]
    pub fn gr_rfac_ui(res: gr_ptr, x: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_rfac_fmpz__extern"]
    pub fn gr_rfac_fmpz(res: gr_ptr, x: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_rfac_vec__extern"]
    pub fn gr_rfac_vec(res: gr_ptr, len: mp_limb_signed_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_bin__extern"]
    pub fn gr_bin(res: gr_ptr, x: gr_srcptr, y: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_bin_ui__extern"]
    pub fn gr_bin_ui(
        res: gr_ptr,
        x: gr_srcptr,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bin_uiui__extern"]
    pub fn gr_bin_uiui(
        res: gr_ptr,
        x: mp_limb_t,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bin_vec__extern"]
    pub fn gr_bin_vec(
        res: gr_ptr,
        x: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bin_ui_vec__extern"]
    pub fn gr_bin_ui_vec(
        res: gr_ptr,
        x: mp_limb_t,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_rising__extern"]
    pub fn gr_rising(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_rising_ui__extern"]
    pub fn gr_rising_ui(
        res: gr_ptr,
        x: gr_srcptr,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_falling__extern"]
    pub fn gr_falling(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_falling_ui__extern"]
    pub fn gr_falling_ui(
        res: gr_ptr,
        x: gr_srcptr,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_gamma__extern"]
    pub fn gr_gamma(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_gamma_fmpz__extern"]
    pub fn gr_gamma_fmpz(res: gr_ptr, x: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_gamma_fmpq__extern"]
    pub fn gr_gamma_fmpq(res: gr_ptr, x: *const fmpq, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_rgamma__extern"]
    pub fn gr_rgamma(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_lgamma__extern"]
    pub fn gr_lgamma(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_digamma__extern"]
    pub fn gr_digamma(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_beta__extern"]
    pub fn gr_beta(res: gr_ptr, x: gr_srcptr, y: gr_srcptr, ctx: *mut gr_ctx_struct)
        -> libc::c_int;
    #[link_name = "gr_barnes_g__extern"]
    pub fn gr_barnes_g(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_log_barnes_g__extern"]
    pub fn gr_log_barnes_g(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_doublefac__extern"]
    pub fn gr_doublefac(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_doublefac_ui__extern"]
    pub fn gr_doublefac_ui(res: gr_ptr, x: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_harmonic__extern"]
    pub fn gr_harmonic(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_harmonic_ui__extern"]
    pub fn gr_harmonic_ui(res: gr_ptr, x: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_bernoulli_ui__extern"]
    pub fn gr_bernoulli_ui(res: gr_ptr, x: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_bernoulli_fmpz__extern"]
    pub fn gr_bernoulli_fmpz(res: gr_ptr, x: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_bernoulli_vec__extern"]
    pub fn gr_bernoulli_vec(
        res: gr_ptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_fib_ui__extern"]
    pub fn gr_fib_ui(res: gr_ptr, x: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_fib_fmpz__extern"]
    pub fn gr_fib_fmpz(res: gr_ptr, x: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_fib_vec__extern"]
    pub fn gr_fib_vec(res: gr_ptr, len: mp_limb_signed_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_eulernum_ui__extern"]
    pub fn gr_eulernum_ui(res: gr_ptr, x: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_eulernum_fmpz__extern"]
    pub fn gr_eulernum_fmpz(res: gr_ptr, x: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_eulernum_vec__extern"]
    pub fn gr_eulernum_vec(
        res: gr_ptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bernpoly_ui__extern"]
    pub fn gr_bernpoly_ui(
        res: gr_ptr,
        n: mp_limb_t,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_eulerpoly_ui__extern"]
    pub fn gr_eulerpoly_ui(
        res: gr_ptr,
        n: mp_limb_t,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bellnum_ui__extern"]
    pub fn gr_bellnum_ui(res: gr_ptr, x: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_bellnum_fmpz__extern"]
    pub fn gr_bellnum_fmpz(res: gr_ptr, x: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_bellnum_vec__extern"]
    pub fn gr_bellnum_vec(
        res: gr_ptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_stirling_s1u_uiui__extern"]
    pub fn gr_stirling_s1u_uiui(
        res: gr_ptr,
        x: mp_limb_t,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_stirling_s1_uiui__extern"]
    pub fn gr_stirling_s1_uiui(
        res: gr_ptr,
        x: mp_limb_t,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_stirling_s2_uiui__extern"]
    pub fn gr_stirling_s2_uiui(
        res: gr_ptr,
        x: mp_limb_t,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_stirling_s1u_ui_vec__extern"]
    pub fn gr_stirling_s1u_ui_vec(
        res: gr_ptr,
        x: mp_limb_t,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_stirling_s1_ui_vec__extern"]
    pub fn gr_stirling_s1_ui_vec(
        res: gr_ptr,
        x: mp_limb_t,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_stirling_s2_ui_vec__extern"]
    pub fn gr_stirling_s2_ui_vec(
        res: gr_ptr,
        x: mp_limb_t,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_partitions_ui__extern"]
    pub fn gr_partitions_ui(res: gr_ptr, x: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_partitions_fmpz__extern"]
    pub fn gr_partitions_fmpz(res: gr_ptr, x: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_partitions_vec__extern"]
    pub fn gr_partitions_vec(
        res: gr_ptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_erf__extern"]
    pub fn gr_erf(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_erfc__extern"]
    pub fn gr_erfc(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_erfcx__extern"]
    pub fn gr_erfcx(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_erfi__extern"]
    pub fn gr_erfi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_erfinv__extern"]
    pub fn gr_erfinv(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_erfcinv__extern"]
    pub fn gr_erfcinv(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_fresnel_s__extern"]
    pub fn gr_fresnel_s(
        res: gr_ptr,
        x: gr_srcptr,
        normalized: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_fresnel_c__extern"]
    pub fn gr_fresnel_c(
        res: gr_ptr,
        x: gr_srcptr,
        normalized: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_fresnel__extern"]
    pub fn gr_fresnel(
        res1: gr_ptr,
        res2: gr_ptr,
        x: gr_srcptr,
        normalized: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_gamma_upper__extern"]
    pub fn gr_gamma_upper(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        regularized: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_gamma_lower__extern"]
    pub fn gr_gamma_lower(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        regularized: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_beta_lower__extern"]
    pub fn gr_beta_lower(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        regularized: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_exp_integral__extern"]
    pub fn gr_exp_integral(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_exp_integral_ei__extern"]
    pub fn gr_exp_integral_ei(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sin_integral__extern"]
    pub fn gr_sin_integral(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_cos_integral__extern"]
    pub fn gr_cos_integral(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_sinh_integral__extern"]
    pub fn gr_sinh_integral(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_cosh_integral__extern"]
    pub fn gr_cosh_integral(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_log_integral__extern"]
    pub fn gr_log_integral(
        res: gr_ptr,
        x: gr_srcptr,
        offset: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_dilog__extern"]
    pub fn gr_dilog(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_bessel_j__extern"]
    pub fn gr_bessel_j(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bessel_y__extern"]
    pub fn gr_bessel_y(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bessel_i__extern"]
    pub fn gr_bessel_i(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bessel_k__extern"]
    pub fn gr_bessel_k(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bessel_j_y__extern"]
    pub fn gr_bessel_j_y(
        res1: gr_ptr,
        res2: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bessel_i_scaled__extern"]
    pub fn gr_bessel_i_scaled(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_bessel_k_scaled__extern"]
    pub fn gr_bessel_k_scaled(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_airy__extern"]
    pub fn gr_airy(
        res1: gr_ptr,
        res2: gr_ptr,
        res3: gr_ptr,
        res4: gr_ptr,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_airy_ai__extern"]
    pub fn gr_airy_ai(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_airy_bi__extern"]
    pub fn gr_airy_bi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_airy_ai_prime__extern"]
    pub fn gr_airy_ai_prime(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_airy_bi_prime__extern"]
    pub fn gr_airy_bi_prime(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_airy_ai_zero__extern"]
    pub fn gr_airy_ai_zero(res: gr_ptr, n: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_airy_bi_zero__extern"]
    pub fn gr_airy_bi_zero(res: gr_ptr, n: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_airy_ai_prime_zero__extern"]
    pub fn gr_airy_ai_prime_zero(
        res: gr_ptr,
        n: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_airy_bi_prime_zero__extern"]
    pub fn gr_airy_bi_prime_zero(
        res: gr_ptr,
        n: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_coulomb__extern"]
    pub fn gr_coulomb(
        res1: gr_ptr,
        res2: gr_ptr,
        res3: gr_ptr,
        res4: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_coulomb_f__extern"]
    pub fn gr_coulomb_f(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_coulomb_g__extern"]
    pub fn gr_coulomb_g(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_coulomb_hpos__extern"]
    pub fn gr_coulomb_hpos(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_coulomb_hneg__extern"]
    pub fn gr_coulomb_hneg(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_chebyshev_t_fmpz__extern"]
    pub fn gr_chebyshev_t_fmpz(
        res: gr_ptr,
        n: *const fmpz,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_chebyshev_t__extern"]
    pub fn gr_chebyshev_t(
        res: gr_ptr,
        n: gr_srcptr,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_chebyshev_u_fmpz__extern"]
    pub fn gr_chebyshev_u_fmpz(
        res: gr_ptr,
        n: *const fmpz,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_chebyshev_u__extern"]
    pub fn gr_chebyshev_u(
        res: gr_ptr,
        n: gr_srcptr,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_jacobi_p__extern"]
    pub fn gr_jacobi_p(
        res: gr_ptr,
        n: gr_srcptr,
        a: gr_srcptr,
        b: gr_srcptr,
        z: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_gegenbauer_c__extern"]
    pub fn gr_gegenbauer_c(
        res: gr_ptr,
        n: gr_srcptr,
        m: gr_srcptr,
        z: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_laguerre_l__extern"]
    pub fn gr_laguerre_l(
        res: gr_ptr,
        n: gr_srcptr,
        m: gr_srcptr,
        z: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_hermite_h__extern"]
    pub fn gr_hermite_h(
        res: gr_ptr,
        n: gr_srcptr,
        z: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_legendre_p__extern"]
    pub fn gr_legendre_p(
        res: gr_ptr,
        n: gr_srcptr,
        m: gr_srcptr,
        z: gr_srcptr,
        type_: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_legendre_q__extern"]
    pub fn gr_legendre_q(
        res: gr_ptr,
        n: gr_srcptr,
        m: gr_srcptr,
        z: gr_srcptr,
        type_: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_spherical_y_si__extern"]
    pub fn gr_spherical_y_si(
        res: gr_ptr,
        n: mp_limb_signed_t,
        m: mp_limb_signed_t,
        theta: gr_srcptr,
        phi: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_legendre_p_root_ui__extern"]
    pub fn gr_legendre_p_root_ui(
        root: gr_ptr,
        weight: gr_ptr,
        n: mp_limb_t,
        k: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_hypgeom_0f1__extern"]
    pub fn gr_hypgeom_0f1(
        res: gr_ptr,
        a: gr_srcptr,
        z: gr_srcptr,
        flags: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_hypgeom_1f1__extern"]
    pub fn gr_hypgeom_1f1(
        res: gr_ptr,
        a: gr_srcptr,
        b: gr_srcptr,
        z: gr_srcptr,
        flags: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_hypgeom_u__extern"]
    pub fn gr_hypgeom_u(
        res: gr_ptr,
        a: gr_srcptr,
        b: gr_srcptr,
        z: gr_srcptr,
        flags: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_hypgeom_2f1__extern"]
    pub fn gr_hypgeom_2f1(
        res: gr_ptr,
        a: gr_srcptr,
        b: gr_srcptr,
        c: gr_srcptr,
        z: gr_srcptr,
        flags: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_hypgeom_pfq__extern"]
    pub fn gr_hypgeom_pfq(
        res: gr_ptr,
        a: *const gr_vec_struct,
        b: *const gr_vec_struct,
        z: gr_srcptr,
        flags: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_zeta__extern"]
    pub fn gr_zeta(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_zeta_ui__extern"]
    pub fn gr_zeta_ui(res: gr_ptr, x: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_hurwitz_zeta__extern"]
    pub fn gr_hurwitz_zeta(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_polylog__extern"]
    pub fn gr_polylog(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_polygamma__extern"]
    pub fn gr_polygamma(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_lerch_phi__extern"]
    pub fn gr_lerch_phi(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_stieltjes__extern"]
    pub fn gr_stieltjes(
        res: gr_ptr,
        x: *const fmpz,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_dirichlet_eta__extern"]
    pub fn gr_dirichlet_eta(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_dirichlet_beta__extern"]
    pub fn gr_dirichlet_beta(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_riemann_xi__extern"]
    pub fn gr_riemann_xi(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_zeta_zero__extern"]
    pub fn gr_zeta_zero(res: gr_ptr, n: *const fmpz, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_zeta_zero_vec__extern"]
    pub fn gr_zeta_zero_vec(
        res: gr_ptr,
        n: *const fmpz,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_zeta_nzeros__extern"]
    pub fn gr_zeta_nzeros(res: gr_ptr, t: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_jacobi_theta__extern"]
    pub fn gr_jacobi_theta(
        res1: gr_ptr,
        res2: gr_ptr,
        res3: gr_ptr,
        res4: gr_ptr,
        z: gr_srcptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_jacobi_theta_1__extern"]
    pub fn gr_jacobi_theta_1(
        res: gr_ptr,
        z: gr_srcptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_jacobi_theta_2__extern"]
    pub fn gr_jacobi_theta_2(
        res: gr_ptr,
        z: gr_srcptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_jacobi_theta_3__extern"]
    pub fn gr_jacobi_theta_3(
        res: gr_ptr,
        z: gr_srcptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_jacobi_theta_4__extern"]
    pub fn gr_jacobi_theta_4(
        res: gr_ptr,
        z: gr_srcptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_modular_j__extern"]
    pub fn gr_modular_j(res: gr_ptr, tau: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_modular_lambda__extern"]
    pub fn gr_modular_lambda(res: gr_ptr, tau: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_modular_delta__extern"]
    pub fn gr_modular_delta(res: gr_ptr, tau: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_hilbert_class_poly__extern"]
    pub fn gr_hilbert_class_poly(
        res: gr_ptr,
        D: mp_limb_signed_t,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_dedekind_eta__extern"]
    pub fn gr_dedekind_eta(res: gr_ptr, tau: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_dedekind_eta_q__extern"]
    pub fn gr_dedekind_eta_q(res: gr_ptr, tau: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_eisenstein_e__extern"]
    pub fn gr_eisenstein_e(
        res: gr_ptr,
        n: mp_limb_t,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_eisenstein_g__extern"]
    pub fn gr_eisenstein_g(
        res: gr_ptr,
        n: mp_limb_t,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_eisenstein_g_vec__extern"]
    pub fn gr_eisenstein_g_vec(
        res: gr_ptr,
        tau: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_agm1__extern"]
    pub fn gr_agm1(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_agm__extern"]
    pub fn gr_agm(res: gr_ptr, x: gr_srcptr, y: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_elliptic_k__extern"]
    pub fn gr_elliptic_k(res: gr_ptr, m: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_elliptic_e__extern"]
    pub fn gr_elliptic_e(res: gr_ptr, m: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    #[link_name = "gr_elliptic_pi__extern"]
    pub fn gr_elliptic_pi(
        res: gr_ptr,
        n: gr_srcptr,
        m: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_elliptic_f__extern"]
    pub fn gr_elliptic_f(
        res: gr_ptr,
        phi: gr_srcptr,
        m: gr_srcptr,
        pi: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_elliptic_e_inc__extern"]
    pub fn gr_elliptic_e_inc(
        res: gr_ptr,
        phi: gr_srcptr,
        m: gr_srcptr,
        pi: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_elliptic_pi_inc__extern"]
    pub fn gr_elliptic_pi_inc(
        res: gr_ptr,
        n: gr_srcptr,
        phi: gr_srcptr,
        m: gr_srcptr,
        pi: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_carlson_rc__extern"]
    pub fn gr_carlson_rc(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        flags: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_carlson_rf__extern"]
    pub fn gr_carlson_rf(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        flags: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_carlson_rd__extern"]
    pub fn gr_carlson_rd(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        flags: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_carlson_rg__extern"]
    pub fn gr_carlson_rg(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        flags: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_carlson_rj__extern"]
    pub fn gr_carlson_rj(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        z: gr_srcptr,
        w: gr_srcptr,
        flags: libc::c_int,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_elliptic_invariants__extern"]
    pub fn gr_elliptic_invariants(
        res1: gr_ptr,
        res2: gr_ptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_elliptic_roots__extern"]
    pub fn gr_elliptic_roots(
        res1: gr_ptr,
        res2: gr_ptr,
        res3: gr_ptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_weierstrass_p__extern"]
    pub fn gr_weierstrass_p(
        res: gr_ptr,
        z: gr_srcptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_weierstrass_p_prime__extern"]
    pub fn gr_weierstrass_p_prime(
        res: gr_ptr,
        z: gr_srcptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_weierstrass_p_inv__extern"]
    pub fn gr_weierstrass_p_inv(
        res: gr_ptr,
        z: gr_srcptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_weierstrass_zeta__extern"]
    pub fn gr_weierstrass_zeta(
        res: gr_ptr,
        z: gr_srcptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    #[link_name = "gr_weierstrass_sigma__extern"]
    pub fn gr_weierstrass_sigma(
        res: gr_ptr,
        z: gr_srcptr,
        tau: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_exp(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_expm1(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_exp2(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_exp10(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_log(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_log1p(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_log2(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_log10(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_sin(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_cos(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_sin_cos(
        res1: gr_ptr,
        res2: gr_ptr,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_tan(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_asin(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_asinh(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_atan(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_atanh(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_acot(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_asec(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_acsc(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_acoth(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_asech(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_acsch(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_fac(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_fac_fmpz(res: gr_ptr, n: *const fmpz, ctx: *mut gr_ctx_struct)
        -> libc::c_int;
    pub fn gr_generic_fac_ui(res: gr_ptr, n: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_fac_vec(
        res: gr_ptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_rfac(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_rfac_fmpz(
        res: gr_ptr,
        n: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_rfac_ui(res: gr_ptr, n: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_rfac_vec(
        res: gr_ptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_rising(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_rising_ui(
        res: gr_ptr,
        x: gr_srcptr,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_falling(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_falling_ui(
        res: gr_ptr,
        x: gr_srcptr,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_bin(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_bin_ui(
        res: gr_ptr,
        x: gr_srcptr,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_bin_uiui(
        res: gr_ptr,
        x: mp_limb_t,
        y: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_bin_vec(
        res: gr_ptr,
        x: gr_srcptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_bin_ui_vec(
        res: gr_ptr,
        x: mp_limb_t,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_doublefac(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_doublefac_ui(
        res: gr_ptr,
        n: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_harmonic(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_harmonic_ui(
        res: gr_ptr,
        n: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_beta(
        res: gr_ptr,
        x: gr_srcptr,
        y: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_fib2_fmpz(
        v: gr_ptr,
        u: gr_ptr,
        n: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_fib_fmpz(res: gr_ptr, n: *const fmpz, ctx: *mut gr_ctx_struct)
        -> libc::c_int;
    pub fn gr_generic_fib_ui(res: gr_ptr, n: mp_limb_t, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_fib_vec(
        res: gr_ptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_bellnum_fmpz(
        res: gr_ptr,
        n: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_bellnum_ui(res: gr_ptr, n: mp_limb_t, ctx: *mut gr_ctx_struct)
        -> libc::c_int;
    pub fn gr_generic_bellnum_vec(
        res: gr_ptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_partitions_fmpz(
        res: gr_ptr,
        n: *const fmpz,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_partitions_ui(
        res: gr_ptr,
        n: mp_limb_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_partitions_vec(
        res: gr_ptr,
        len: mp_limb_signed_t,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_chebyshev_t2_fmpz(
        a: gr_ptr,
        b: gr_ptr,
        n: *const fmpz,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_chebyshev_t_fmpz(
        y: gr_ptr,
        n: *const fmpz,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_chebyshev_u2_fmpz(
        a: gr_ptr,
        b: gr_ptr,
        n: *const fmpz,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_chebyshev_u_fmpz(
        y: gr_ptr,
        n: *const fmpz,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
    pub fn gr_generic_erfcx(res: gr_ptr, x: gr_srcptr, ctx: *mut gr_ctx_struct) -> libc::c_int;
    pub fn gr_generic_hilbert_class_poly(
        res: gr_ptr,
        D: mp_limb_signed_t,
        x: gr_srcptr,
        ctx: *mut gr_ctx_struct,
    ) -> libc::c_int;
}
