/* automatically generated by rust-bindgen 0.70.1 */

use libc::*;
use crate::deps::*;
use crate::bindgen::*;
use crate::acb::*;
use crate::acb_calc::*;
use crate::acb_dft::*;
use crate::acb_dirichlet::*;
use crate::acb_elliptic::*;
use crate::acb_hypgeom::*;
use crate::acb_mat::*;
use crate::acb_modular::*;
use crate::acb_poly::*;
use crate::acb_theta::*;
use crate::acb_types::*;
use crate::acf::*;
use crate::acf_types::*;
use crate::aprcl::*;
use crate::arb::*;
use crate::arb_calc::*;
use crate::arb_fmpz_poly::*;
use crate::arb_fpwrap::*;
use crate::arb_hypgeom::*;
use crate::arb_mat::*;
use crate::arb_poly::*;
use crate::arb_types::*;
use crate::arf::*;
use crate::arf_types::*;
use crate::arith::*;
use crate::bernoulli::*;
use crate::bool_mat::*;
use crate::ca::*;
use crate::ca_ext::*;
use crate::ca_field::*;
use crate::ca_mat::*;
use crate::ca_poly::*;
use crate::ca_vec::*;
use crate::calcium::*;
use crate::d_mat::*;
use crate::d_vec::*;
use crate::dirichlet::*;
use crate::dlog::*;
use crate::double_extras::*;
use crate::double_interval::*;
use crate::fexpr::*;
use crate::fexpr_builtin::*;
use crate::fft::*;
use crate::fft_tuning::*;
use crate::flint_config::*;
use crate::flint::*;
use crate::fmpq::*;
use crate::fmpq_mat::*;
use crate::fmpq_mpoly::*;
use crate::fmpq_mpoly_factor::*;
use crate::fmpq_poly::*;
use crate::fmpq_types::*;
use crate::fmpq_vec::*;
use crate::fmpz::*;
use crate::fmpz_extras::*;
use crate::fmpz_factor::*;
use crate::fmpz_lll::*;
use crate::fmpz_mat::*;
use crate::fmpz_mod::*;
use crate::fmpz_mod_mat::*;
use crate::fmpz_mod_mpoly::*;
use crate::fmpz_mod_mpoly_factor::*;
use crate::fmpz_mod_poly::*;
use crate::fmpz_mod_poly_factor::*;
use crate::fmpz_mod_types::*;
use crate::fmpz_mod_vec::*;
use crate::fmpz_mpoly::*;
use crate::fmpz_mpoly_factor::*;
use crate::fmpz_mpoly_q::*;
use crate::fmpz_poly::*;
use crate::fmpz_poly_factor::*;
use crate::fmpz_poly_mat::*;
use crate::fmpz_poly_q::*;
use crate::fmpz_types::*;
use crate::fmpz_vec::*;
use crate::fmpzi::*;
use crate::fq::*;
use crate::fq_default::*;
use crate::fq_default_mat::*;
use crate::fq_default_poly::*;
use crate::fq_default_poly_factor::*;
use crate::fq_embed::*;
use crate::fq_embed_templates::*;
use crate::fq_mat::*;
use crate::fq_mat_templates::*;
use crate::fq_nmod::*;
use crate::fq_nmod_embed::*;
use crate::fq_nmod_mat::*;
use crate::fq_nmod_mpoly::*;
use crate::fq_nmod_mpoly_factor::*;
use crate::fq_nmod_poly::*;
use crate::fq_nmod_poly_factor::*;
use crate::fq_nmod_types::*;
use crate::fq_nmod_vec::*;
use crate::fq_poly::*;
use crate::fq_poly_factor::*;
use crate::fq_poly_factor_templates::*;
use crate::fq_poly_templates::*;
use crate::fq_templates::*;
use crate::fq_types::*;
use crate::fq_vec::*;
use crate::fq_vec_templates::*;
use crate::fq_zech::*;
use crate::fq_zech_embed::*;
use crate::fq_zech_mat::*;
use crate::fq_zech_mpoly::*;
use crate::fq_zech_mpoly_factor::*;
use crate::fq_zech_poly::*;
use crate::fq_zech_poly_factor::*;
use crate::fq_zech_types::*;
use crate::fq_zech_vec::*;
use crate::gmpcompat::*;
use crate::gr::*;
use crate::gr_generic::*;
use crate::gr_mat::*;
use crate::gr_mpoly::*;
use crate::gr_poly::*;
use crate::gr_special::*;
use crate::gr_vec::*;
use crate::hypgeom::*;
use crate::limb_types::*;
use crate::long_extras::*;
use crate::longlong::*;
use crate::mpf_impl::*;
use crate::mpfr_mat::*;
use crate::mpfr_vec::*;
use crate::mpoly::*;
use crate::mpoly_types::*;
use crate::n_poly::*;
use crate::n_poly_types::*;
use crate::nf::*;
use crate::nf_elem::*;
use crate::nmod::*;
use crate::nmod_mat::*;
use crate::nmod_mpoly::*;
use crate::nmod_mpoly_factor::*;
use crate::nmod_poly::*;
use crate::nmod_poly_factor::*;
use crate::nmod_poly_mat::*;
use crate::nmod_types::*;
use crate::nmod_vec::*;
use crate::padic::*;
use crate::padic_mat::*;
use crate::padic_poly::*;
use crate::padic_types::*;
use crate::partitions::*;
use crate::perm::*;
use crate::qadic::*;
use crate::qfb::*;
use crate::qqbar::*;
use crate::qsieve::*;
use crate::templates::*;
use crate::thread_pool::*;
use crate::thread_support::*;
use crate::ulong_extras::*;


pub const MAG_BITS: u32 = 30;
extern "C" {
    #[link_name = "_fmpz_set_fast__extern"]
    pub fn _fmpz_set_fast(f: *mut fmpz, g: *const fmpz);
    #[link_name = "_fmpz_add_fast__extern"]
    pub fn _fmpz_add_fast(z: *mut fmpz, x: *const fmpz, c: mp_limb_signed_t);
    #[link_name = "_fmpz_add2_fast__extern"]
    pub fn _fmpz_add2_fast(z: *mut fmpz, x: *const fmpz, y: *const fmpz, c: mp_limb_signed_t);
    #[link_name = "_fmpz_sub2_fast__extern"]
    pub fn _fmpz_sub2_fast(z: *mut fmpz, x: *const fmpz, y: *const fmpz, c: mp_limb_signed_t);
    #[link_name = "__mag_fixmul32__extern"]
    pub fn __mag_fixmul32(x: mp_limb_t, y: mp_limb_t) -> mp_limb_t;
    #[link_name = "mag_init__extern"]
    pub fn mag_init(x: *mut mag_struct);
    #[link_name = "mag_init_set__extern"]
    pub fn mag_init_set(x: *mut mag_struct, y: *const mag_struct);
    pub fn mag_clear(x: *mut mag_struct);
    #[link_name = "mag_swap__extern"]
    pub fn mag_swap(x: *mut mag_struct, y: *mut mag_struct);
    #[link_name = "mag_set__extern"]
    pub fn mag_set(x: *mut mag_struct, y: *const mag_struct);
    #[link_name = "mag_zero__extern"]
    pub fn mag_zero(x: *mut mag_struct);
    #[link_name = "mag_one__extern"]
    pub fn mag_one(x: *mut mag_struct);
    #[link_name = "mag_is_special__extern"]
    pub fn mag_is_special(x: *const mag_struct) -> libc::c_int;
    #[link_name = "mag_is_zero__extern"]
    pub fn mag_is_zero(x: *const mag_struct) -> libc::c_int;
    #[link_name = "mag_inf__extern"]
    pub fn mag_inf(x: *mut mag_struct);
    #[link_name = "mag_is_inf__extern"]
    pub fn mag_is_inf(x: *const mag_struct) -> libc::c_int;
    #[link_name = "mag_is_finite__extern"]
    pub fn mag_is_finite(x: *const mag_struct) -> libc::c_int;
    #[link_name = "mag_equal__extern"]
    pub fn mag_equal(x: *const mag_struct, y: *const mag_struct) -> libc::c_int;
    pub fn mag_mul(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    pub fn mag_mul_lower(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    pub fn mag_addmul(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    pub fn mag_add_2exp_fmpz(z: *mut mag_struct, x: *const mag_struct, e: *const fmpz);
    pub fn mag_add(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    pub fn mag_add_lower(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    pub fn mag_add_ui(z: *mut mag_struct, x: *const mag_struct, y: mp_limb_t);
    pub fn mag_add_ui_lower(res: *mut mag_struct, x: *const mag_struct, y: mp_limb_t);
    pub fn mag_add_ui_2exp_si(
        z: *mut mag_struct,
        x: *const mag_struct,
        y: mp_limb_t,
        e: mp_limb_signed_t,
    );
    pub fn mag_div(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    pub fn mag_div_lower(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    #[link_name = "mag_inv__extern"]
    pub fn mag_inv(res: *mut mag_struct, x: *const mag_struct);
    #[link_name = "mag_inv_lower__extern"]
    pub fn mag_inv_lower(res: *mut mag_struct, x: *const mag_struct);
    pub fn mag_mul_2exp_si(z: *mut mag_struct, x: *const mag_struct, y: mp_limb_signed_t);
    pub fn mag_mul_2exp_fmpz(z: *mut mag_struct, x: *const mag_struct, y: *const fmpz);
    pub fn mag_sub(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    pub fn mag_sub_lower(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    #[link_name = "mag_fast_init_set__extern"]
    pub fn mag_fast_init_set(x: *mut mag_struct, y: *const mag_struct);
    #[link_name = "mag_fast_zero__extern"]
    pub fn mag_fast_zero(x: *mut mag_struct);
    #[link_name = "mag_fast_is_zero__extern"]
    pub fn mag_fast_is_zero(x: *const mag_struct) -> libc::c_int;
    #[link_name = "mag_fast_mul__extern"]
    pub fn mag_fast_mul(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    #[link_name = "mag_fast_mul_2exp_si__extern"]
    pub fn mag_fast_mul_2exp_si(z: *mut mag_struct, x: *const mag_struct, y: mp_limb_signed_t);
    #[link_name = "mag_fast_addmul__extern"]
    pub fn mag_fast_addmul(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    #[link_name = "mag_fast_add_2exp_si__extern"]
    pub fn mag_fast_add_2exp_si(z: *mut mag_struct, x: *const mag_struct, e: mp_limb_signed_t);
    pub fn mag_set_d(z: *mut mag_struct, x: f64);
    pub fn mag_set_d_lower(z: *mut mag_struct, x: f64);
    pub fn mag_set_d_2exp_fmpz(z: *mut mag_struct, c: f64, exp: *const fmpz);
    pub fn mag_set_d_2exp_fmpz_lower(z: *mut mag_struct, c: f64, exp: *const fmpz);
    pub fn mag_set_fmpz_2exp_fmpz(z: *mut mag_struct, man: *const fmpz, exp: *const fmpz);
    pub fn mag_randtest_special(
        x: *mut mag_struct,
        state: *mut flint_rand_s,
        expbits: mp_limb_signed_t,
    );
    pub fn mag_randtest(x: *mut mag_struct, state: *mut flint_rand_s, expbits: mp_limb_signed_t);
    pub fn mag_fprint(file: *mut FILE, x: *const mag_struct);
    pub fn mag_fprintd(file: *mut FILE, x: *const mag_struct, d: mp_limb_signed_t);
    pub fn mag_print(x: *const mag_struct);
    pub fn mag_printd(x: *const mag_struct, d: mp_limb_signed_t);
    pub fn mag_get_fmpq(y: *mut fmpq, x: *const mag_struct);
    pub fn mag_get_fmpz(res: *mut fmpz, x: *const mag_struct);
    pub fn mag_get_fmpz_lower(res: *mut fmpz, x: *const mag_struct);
    pub fn mag_cmp(x: *const mag_struct, y: *const mag_struct) -> libc::c_int;
    pub fn mag_cmp_2exp_si(x: *const mag_struct, e: mp_limb_signed_t) -> libc::c_int;
    #[link_name = "mag_min__extern"]
    pub fn mag_min(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    #[link_name = "mag_max__extern"]
    pub fn mag_max(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    #[link_name = "_mag_vec_init__extern"]
    pub fn _mag_vec_init(n: mp_limb_signed_t) -> mag_ptr;
    #[link_name = "_mag_vec_clear__extern"]
    pub fn _mag_vec_clear(v: mag_ptr, n: mp_limb_signed_t);
    pub fn mag_get_d(z: *const mag_struct) -> f64;
    pub fn mag_get_d_log2_approx(x: *const mag_struct) -> f64;
    pub fn mag_d_log_upper_bound(x: f64) -> f64;
    pub fn mag_d_log_lower_bound(x: f64) -> f64;
    pub fn mag_log1p(z: *mut mag_struct, x: *const mag_struct);
    pub fn mag_log_ui(t: *mut mag_struct, n: mp_limb_t);
    pub fn mag_log(z: *mut mag_struct, x: *const mag_struct);
    pub fn mag_log_lower(z: *mut mag_struct, x: *const mag_struct);
    pub fn mag_neg_log(z: *mut mag_struct, x: *const mag_struct);
    pub fn mag_neg_log_lower(z: *mut mag_struct, x: *const mag_struct);
    pub fn mag_exp(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_exp_lower(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_expinv(res: *mut mag_struct, x: *const mag_struct);
    pub fn mag_expinv_lower(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_expm1(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_exp_tail(z: *mut mag_struct, x: *const mag_struct, N: mp_limb_t);
    pub fn mag_sinh(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_sinh_lower(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_cosh(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_cosh_lower(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_pow_ui(z: *mut mag_struct, x: *const mag_struct, e: mp_limb_t);
    pub fn mag_pow_ui_lower(z: *mut mag_struct, x: *const mag_struct, e: mp_limb_t);
    pub fn mag_pow_fmpz(z: *mut mag_struct, x: *const mag_struct, e: *const fmpz);
    pub fn mag_pow_fmpz_lower(z: *mut mag_struct, x: *const mag_struct, e: *const fmpz);
    pub fn mag_const_pi(res: *mut mag_struct);
    pub fn mag_const_pi_lower(res: *mut mag_struct);
    pub fn mag_atan(res: *mut mag_struct, x: *const mag_struct);
    pub fn mag_atan_lower(res: *mut mag_struct, x: *const mag_struct);
    pub fn mag_fac_ui(z: *mut mag_struct, n: mp_limb_t);
    pub fn mag_rfac_ui(z: *mut mag_struct, n: mp_limb_t);
    pub fn mag_bin_uiui(res: *mut mag_struct, n: mp_limb_t, k: mp_limb_t);
    pub fn mag_bernoulli_div_fac_ui(z: *mut mag_struct, n: mp_limb_t);
    pub fn mag_set_fmpz_2exp_fmpz_lower(z: *mut mag_struct, man: *const fmpz, exp: *const fmpz);
    pub fn mag_sqrt(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_sqrt_lower(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_rsqrt(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_rsqrt_lower(y: *mut mag_struct, x: *const mag_struct);
    pub fn mag_root(y: *mut mag_struct, x: *const mag_struct, n: mp_limb_t);
    pub fn mag_hypot(z: *mut mag_struct, x: *const mag_struct, y: *const mag_struct);
    pub fn mag_binpow_uiui(b: *mut mag_struct, m: mp_limb_t, n: mp_limb_t);
    pub fn mag_polylog_tail(
        u: *mut mag_struct,
        z: *const mag_struct,
        sigma: mp_limb_signed_t,
        d: mp_limb_t,
        N: mp_limb_t,
    );
    pub fn mag_geom_series(res: *mut mag_struct, x: *const mag_struct, n: mp_limb_t);
    pub fn mag_hurwitz_zeta_uiui(res: *mut mag_struct, s: mp_limb_t, a: mp_limb_t);
    pub fn mag_set_ui(z: *mut mag_struct, x: mp_limb_t);
    pub fn mag_set_ui_lower(z: *mut mag_struct, x: mp_limb_t);
    pub fn mag_set_ui_2exp_si(z: *mut mag_struct, v: mp_limb_t, e: mp_limb_signed_t);
    #[link_name = "mag_set_fmpz__extern"]
    pub fn mag_set_fmpz(z: *mut mag_struct, x: *const fmpz);
    #[link_name = "mag_set_fmpz_lower__extern"]
    pub fn mag_set_fmpz_lower(z: *mut mag_struct, x: *const fmpz);
    #[link_name = "mag_mul_ui__extern"]
    pub fn mag_mul_ui(z: *mut mag_struct, x: *const mag_struct, y: mp_limb_t);
    #[link_name = "mag_mul_ui_lower__extern"]
    pub fn mag_mul_ui_lower(z: *mut mag_struct, x: *const mag_struct, y: mp_limb_t);
    #[link_name = "mag_mul_fmpz__extern"]
    pub fn mag_mul_fmpz(z: *mut mag_struct, x: *const mag_struct, y: *const fmpz);
    #[link_name = "mag_mul_fmpz_lower__extern"]
    pub fn mag_mul_fmpz_lower(z: *mut mag_struct, x: *const mag_struct, y: *const fmpz);
    #[link_name = "mag_div_ui__extern"]
    pub fn mag_div_ui(z: *mut mag_struct, x: *const mag_struct, y: mp_limb_t);
    #[link_name = "mag_div_fmpz__extern"]
    pub fn mag_div_fmpz(z: *mut mag_struct, x: *const mag_struct, y: *const fmpz);
    #[link_name = "mag_allocated_bytes__extern"]
    pub fn mag_allocated_bytes(x: *const mag_struct) -> mp_limb_signed_t;
    pub fn mag_load_str(res: *mut mag_struct, data: *const libc::c_char) -> libc::c_int;
    pub fn mag_dump_str(x: *const mag_struct) -> *mut libc::c_char;
    pub fn mag_load_file(res: *mut mag_struct, stream: *mut FILE) -> libc::c_int;
    pub fn mag_dump_file(stream: *mut FILE, x: *const mag_struct) -> libc::c_int;
}
