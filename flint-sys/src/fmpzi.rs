/* automatically generated by rust-bindgen 0.70.1 */

#![allow(non_camel_case_types)]
use crate::deps::*;
use crate::fmpz_types::*;
use libc::{c_char, c_int, c_uint, c_void, size_t, FILE};


extern "C" {
    pub fn fmpzi_print(x: *const fmpzi_struct);
    pub fn fmpzi_bits(x: *const fmpzi_struct) -> mp_limb_signed_t;
    pub fn fmpzi_sqr(res: *mut fmpzi_struct, x: *const fmpzi_struct);
    pub fn fmpzi_mul(res: *mut fmpzi_struct, x: *const fmpzi_struct, y: *const fmpzi_struct);
    pub fn fmpzi_pow_ui(res: *mut fmpzi_struct, x: *const fmpzi_struct, exp: mp_limb_t);
    pub fn fmpzi_mul_i(z: *mut fmpzi_struct, x: *const fmpzi_struct);
    pub fn fmpzi_div_i(z: *mut fmpzi_struct, x: *const fmpzi_struct);
    pub fn fmpzi_mul_i_pow_si(res: *mut fmpzi_struct, z: *const fmpzi_struct, k: mp_limb_signed_t);
    pub fn fmpzi_canonical_unit_i_pow(x: *const fmpzi_struct) -> mp_limb_signed_t;
    pub fn fmpzi_divrem(
        q: *mut fmpzi_struct,
        r: *mut fmpzi_struct,
        x: *const fmpzi_struct,
        y: *const fmpzi_struct,
    );
    pub fn fmpzi_divrem_approx(
        q: *mut fmpzi_struct,
        r: *mut fmpzi_struct,
        x: *const fmpzi_struct,
        y: *const fmpzi_struct,
    );
    pub fn fmpzi_divexact(q: *mut fmpzi_struct, x: *const fmpzi_struct, y: *const fmpzi_struct);
    pub fn fmpzi_remove_one_plus_i(
        res: *mut fmpzi_struct,
        x: *const fmpzi_struct,
    ) -> mp_limb_signed_t;
    pub fn fmpzi_gcd_euclidean(
        res: *mut fmpzi_struct,
        x: *const fmpzi_struct,
        y: *const fmpzi_struct,
    );
    pub fn fmpzi_gcd_euclidean_improved(
        res: *mut fmpzi_struct,
        x: *const fmpzi_struct,
        y: *const fmpzi_struct,
    );
    pub fn fmpzi_gcd_binary(res: *mut fmpzi_struct, x: *const fmpzi_struct, y: *const fmpzi_struct);
    pub fn fmpzi_gcd_shortest(g: *mut fmpzi_struct, x: *const fmpzi_struct, y: *const fmpzi_struct);
    pub fn fmpzi_gcd(g: *mut fmpzi_struct, x: *const fmpzi_struct, y: *const fmpzi_struct);
    pub fn fmpzi_is_prime(n: *const fmpzi_struct) -> ::std::os::raw::c_int;
    pub fn fmpzi_is_probabprime(n: *const fmpzi_struct) -> ::std::os::raw::c_int;
}
