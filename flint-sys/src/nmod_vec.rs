/* automatically generated by rust-bindgen 0.70.1 */

use libc::*;
use crate::deps::*;
use crate::flint::*;


extern "C" {
    #[link_name = "_nmod_vec_init__extern"]
    pub fn _nmod_vec_init(len: mp_limb_signed_t) -> mp_ptr;
    #[link_name = "_nmod_vec_clear__extern"]
    pub fn _nmod_vec_clear(vec: mp_ptr);
    pub fn _nmod_vec_randtest(
        vec: mp_ptr,
        state: *mut flint_rand_s,
        len: mp_limb_signed_t,
        mod_: nmod_t,
    );
    #[link_name = "_nmod_vec_zero__extern"]
    pub fn _nmod_vec_zero(vec: mp_ptr, len: mp_limb_signed_t);
    pub fn _nmod_vec_max_bits(vec: mp_srcptr, len: mp_limb_signed_t) -> mp_limb_t;
    #[link_name = "_nmod_vec_set__extern"]
    pub fn _nmod_vec_set(res: mp_ptr, vec: mp_srcptr, len: mp_limb_signed_t);
    #[link_name = "_nmod_vec_swap__extern"]
    pub fn _nmod_vec_swap(a: mp_ptr, b: mp_ptr, length: mp_limb_signed_t);
    #[link_name = "_nmod_vec_equal__extern"]
    pub fn _nmod_vec_equal(vec: mp_srcptr, vec2: mp_srcptr, len: mp_limb_signed_t) -> libc::c_int;
    #[link_name = "_nmod_vec_is_zero__extern"]
    pub fn _nmod_vec_is_zero(vec: mp_srcptr, len: mp_limb_signed_t) -> libc::c_int;
    pub fn _nmod_vec_reduce(res: mp_ptr, vec: mp_srcptr, len: mp_limb_signed_t, mod_: nmod_t);
    pub fn _nmod_vec_add(
        res: mp_ptr,
        vec1: mp_srcptr,
        vec2: mp_srcptr,
        len: mp_limb_signed_t,
        mod_: nmod_t,
    );
    pub fn _nmod_vec_sub(
        res: mp_ptr,
        vec1: mp_srcptr,
        vec2: mp_srcptr,
        len: mp_limb_signed_t,
        mod_: nmod_t,
    );
    pub fn _nmod_vec_neg(res: mp_ptr, vec: mp_srcptr, len: mp_limb_signed_t, mod_: nmod_t);
    pub fn _nmod_vec_scalar_mul_nmod(
        res: mp_ptr,
        vec: mp_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_t,
        mod_: nmod_t,
    );
    pub fn _nmod_vec_scalar_mul_nmod_shoup(
        res: mp_ptr,
        vec: mp_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_t,
        mod_: nmod_t,
    );
    pub fn _nmod_vec_scalar_addmul_nmod(
        res: mp_ptr,
        vec: mp_srcptr,
        len: mp_limb_signed_t,
        c: mp_limb_t,
        mod_: nmod_t,
    );
    pub fn _nmod_vec_dot_bound_limbs(len: mp_limb_signed_t, mod_: nmod_t) -> libc::c_int;
    pub fn _nmod_vec_dot(
        vec1: mp_srcptr,
        vec2: mp_srcptr,
        len: mp_limb_signed_t,
        mod_: nmod_t,
        nlimbs: libc::c_int,
    ) -> mp_limb_t;
    pub fn _nmod_vec_dot_rev(
        vec1: mp_srcptr,
        vec2: mp_srcptr,
        len: mp_limb_signed_t,
        mod_: nmod_t,
        nlimbs: libc::c_int,
    ) -> mp_limb_t;
    pub fn _nmod_vec_dot_ptr(
        vec1: mp_srcptr,
        vec2: *const mp_ptr,
        offset: mp_limb_signed_t,
        len: mp_limb_signed_t,
        mod_: nmod_t,
        nlimbs: libc::c_int,
    ) -> mp_limb_t;
    pub fn _nmod_vec_fprint_pretty(
        file: *mut FILE,
        vec: mp_srcptr,
        len: mp_limb_signed_t,
        mod_: nmod_t,
    ) -> libc::c_int;
    pub fn _nmod_vec_fprint(
        f: *mut FILE,
        vec: mp_srcptr,
        len: mp_limb_signed_t,
        mod_: nmod_t,
    ) -> libc::c_int;
    pub fn _nmod_vec_print_pretty(vec: mp_srcptr, len: mp_limb_signed_t, mod_: nmod_t);
    pub fn _nmod_vec_print(vec: mp_srcptr, len: mp_limb_signed_t, mod_: nmod_t) -> libc::c_int;
}
